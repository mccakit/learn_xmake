"Interface","Description"
"package:name","Get the name of the package"
"package:get","Get the values of the package by name"
"package:set","Set the values of the package by name"
"package:add","Add to the values of the package by name"
"package:license","Get the license of the package"
"package:description","Get the description of the package"
"package:plat","Get the platform of the package"
"package:arch","Get the architecture of the package"
"package:targetos","Get the target OS of the package"
"package:targetarch","Get the target architecture of the package"
"package:is_plat","Whether the current platform is one of the given platforms"
"package:is_arch","Whether the current architecture is one of the given architectures"
"package:is_targetos","Whether the current target OS is one of the given OSes"
"package:is_targetarch","Whether the current target architecture is one of the given architectures"
"package:alias","Get the alias of the package"
"package:urls","Get the URLs of the package"
"package:dep","Get a dependency of the package by name"
"package:deps","Get all dependencies of the package"
"package:sourcehash","Get the SHA-256 checksum of a URL alias"
"package:kind","Get the kind of the package"
"package:is_binary","Whether the package is of kind 'binary'"
"package:is_toolchain","Whether the package is of kind 'toolchain'"
"package:is_library","Whether the package is of kind 'library'"
"package:is_toplevel","Whether the package is directly required by the user"
"package:is_thirdparty","Whether the package is provided by a third-party package manager"
"package:is_debug","Whether the package is built in debug mode"
"package:is_supported","Whether the package is supported by the current platform and architecture"
"package:is_cross","Whether the package is cross-compiled"
"package:cachedir","Get the cache directory of the package"
"package:installdir","Get the installation directory of the package"
"package:scriptdir","Get the directory where the packageâ€™s xmake.lua file is located"
"package:envs","Get the exported environment variables of the package"
"package:getenv","Get the specified environment variable"
"package:setenv","Set the specified environment variable (overwrites existing value)"
"package:addenv","Add values to the specified environment variable"
"package:versions","Get all version strings of the package"
"package:version","Get the version of the package"
"package:version_str","Get the version of the package as a string"
"package:config","Get the specified configuration value of the package"
"package:config_set","Set the specified configuration value of the package"
"package:configs","Get all configurations of the package"
"package:buildhash","Get the build hash of the package"
"package:patches","Get all patches for the current version"
"package:has_cfuncs","Whether the package has the specified C functions"
"package:has_cxxfuncs","Whether the package has the specified C++ functions"
"package:has_ctypes","Whether the package has the specified C types"
"package:has_cxxtypes","Whether the package has the specified C++ types"
"package:has_cincludes","Whether the package has the specified C header files"
"package:has_cxxincludes","Whether the package has the specified C++ header files"
"package:check_csnippets","Whether the specified C snippet can be compiled and linked"
"package:check_cxxsnippets","Whether the specified C++ snippet can be compiled and linked"
"package:check_fcsnippets","Whether the specified Fortran snippet can be compiled and linked"
